/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mt;

import AFD.State;
import AFD.Transition;
import AFD.Edge;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author Player Ghost
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        this.jLabelResultado.setText("Resultado");
        this.FileNameTextField.setText("Algoritmo1.mt");
        RunButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelResultado = new javax.swing.JPanel();
        jLabelResultado = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        FileNameTextField = new javax.swing.JTextPane();
        OKButton = new javax.swing.JButton();
        RunButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanelFita = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelResultado.setBackground(new java.awt.Color(0, 0, 0));
        jLabelResultado.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabelResultado.setForeground(new java.awt.Color(0, 0, 0));
        jLabelResultado.setText("NÃ£o Aceito");

        javax.swing.GroupLayout jPanelResultadoLayout = new javax.swing.GroupLayout(jPanelResultado);
        jPanelResultado.setLayout(jPanelResultadoLayout);
        jPanelResultadoLayout.setHorizontalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultadoLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabelResultado)
                .addGap(230, 230, 230))
        );
        jPanelResultadoLayout.setVerticalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultadoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nome do arquivo:");

        FileNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FileNameTextFieldKeyPressed(evt);
            }
        });

        OKButton.setText("OK");
        OKButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OKButtonMouseClicked(evt);
            }
        });

        RunButton.setText("Executar");
        RunButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RunButtonMouseClicked(evt);
            }
        });

        ResetButton.setText("Resetar");
        ResetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResetButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RunButton)
                        .addGap(40, 40, 40)
                        .addComponent(ResetButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RunButton)
                    .addComponent(ResetButton))
                .addGap(18, 18, 18)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanelFitaLayout = new javax.swing.GroupLayout(jPanelFita);
        jPanelFita.setLayout(jPanelFitaLayout);
        jPanelFitaLayout.setHorizontalGroup(
            jPanelFitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 871, Short.MAX_VALUE)
        );
        jPanelFitaLayout.setVerticalGroup(
            jPanelFitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 97, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelFita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jPanelFita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jPanelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged

    }//GEN-LAST:event_formWindowStateChanged

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowIconified

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowDeiconified

    private void ResetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetButtonMouseClicked
        // TODO add your handling code here:

        firstClick = true;
        QtdCelulas = 0;

        this.panels = null;
        this.labels = null;

        index = 0;
        fita = "";
        test = new javax.swing.JPanel();
        estados = new ArrayList<State>();
        parametros = new ArrayList<String[]>();
        processos = new ArrayList<String[]>();

        this.jPanelFita.removeAll();
        this.jPanelFita.revalidate();
        this.jPanelFita.repaint();

        this.jLabelResultado.setText("Resultado");
        jPanelResultado.setBackground(new Color(187, 187, 187));

        validate();
    }//GEN-LAST:event_ResetButtonMouseClicked

    private void RunButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RunButtonMouseClicked
        if (fileloaded) {
            fileloaded = false;
            RunButton.setEnabled(false);
            new Thread(new Runnable() {

                public void run() {
                    try {
                        turing();
                    } catch (InterruptedException ex) {
                        Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                // give it a name for debugging
            }, "TuringThread").start();
        }
    }//GEN-LAST:event_RunButtonMouseClicked

    @SuppressWarnings("empty-statement")
    private void OKButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKButtonMouseClicked

        if (firstClick) {
            fileloaded = true;

            try {
                readFile();
            } catch (IOException ex) {
                Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
            }

            QtdCelulas = 200;
            panels = new javax.swing.JPanel[QtdCelulas];
            labels = new javax.swing.JLabel[QtdCelulas];

            jPanelFita.setLayout(new FlowLayout());

            for (int i = 0; i < labels.length; i++) {
                panels[i] = new javax.swing.JPanel();
                labels[i] = new javax.swing.JLabel();

                panels[i].setPreferredSize(new Dimension(50, 50));
                panels[i].setBackground(Color.white);

                labels[i].setText("_");
                labels[i].setForeground(Color.black);
                labels[i].setFont(new Font("Dialog", 0, 20));

                panels[i].add(labels[i]);

                jPanelFita.add(panels[i]);
            }

            validate();

            firstClick = false;

            int aux = 0;

            for (int i = labels.length / 2; i < fita.length() + labels.length / 2; i++, aux++) {
                labels[i].setText(fita.substring(aux, aux + 1));
            }

            panels[labels.length / 2].setBackground(Color.yellow);

            jPanelFita.scrollRectToVisible(panels[labels.length / 2 + fita.length() + 5].getBounds());
            index = labels.length / 2;

            RunButton.setEnabled(true);
        }
    }//GEN-LAST:event_OKButtonMouseClicked

    private void FileNameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FileNameTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_FileNameTextFieldKeyPressed

    private void readFile() throws IOException {
        FileInputStream ir = null;
        boolean error = false;

        do {
            try {
                ir = new FileInputStream("src/" + this.FileNameTextField.getText());

                error = false;
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Arquivo nÃ£o encontrado!");
            }
        } while (error);

        BufferedReader in = new BufferedReader(new InputStreamReader(ir));

        String str = null;
        String linha[] = null;

        int index = 0;

        while (in.ready()) {
            str = in.readLine();

            if (!str.equals("")) {
                if (str.charAt(0) == 'q') {
                    linha = str.split(",");
                    processos.add(linha);

                    State st = new State(processos.get(index)[0]);

                    if (!contem(st)) {
                        this.estados.add(st);
                    } else {
                        for (int i = 0; i < this.estados.size(); i++) {
                            if (st.getName().equals(this.estados.get(i).getName())) {
                                st = this.estados.get(i);
                            }
                        }
                    }

                    State prox = new State(processos.get(index)[2]);

                    if (!contem(prox)) {
                        this.estados.add(prox);

                    } else {
                        for (int i = 0; i < this.estados.size(); i++) {

                            if (prox.getName().equals(this.estados.get(i).getName())) {
                                prox = this.estados.get(i);
                            }
                        }
                    }

                    st.addTransition(prox, processos.get(index)[1].charAt(0), processos.get(index)[3].charAt(0), processos.get(index)[4].charAt(0));
                    index++;
                } else {
                    linha = str.split(" ");
                    parametros.add(linha);
                }
            }
        }

        fita = parametros.get(1)[1];

        String fim = parametros.get(3)[1];

        for (State estado : this.estados) {
            if (estado.getName().equals(fim)) {
                estado.setFinal();
            }
        }
    }

    private void turing() throws InterruptedException {
        boolean first = true;
        State actualState = null;

        outerwhile:
        while (true) {

            outerloop:
            for (int i = 0; i < estados.size(); i++) {
                for (int j = 0; j < estados.get(i).getTransitions().size(); j++) {

                    if (actualState != null) {
                        boolean hasTransition = false;

                        for (int k = 0; k < actualState.getTransitions().size(); k++) {
                            if (actualState.getTransitions().get(k).getEdge().getR() == labels[index].getText().charAt(0)) {

                                hasTransition = true;
                            }
                        }

                        if (actualState.getFinal()) {
                            paintResult(true);

                            break outerwhile;
                        }

                        if (!hasTransition) {
                            paintResult(false);

                            break outerwhile;
                        }
                    }

                    if (first) {
                        if (estados.get(i).getName().equals(parametros.get(2)[1])) {
                            if (labels[index].getText().charAt(0) == estados.get(i).getTransitions().get(j).getEdge().getR()) {
                                actualState = estados.get(i).getTransitions().get(j).getState();

                                first = false;

                                labels[index].setText(estados.get(i).getTransitions().get(j).getEdge().getW().toString());

                                if (estados.get(i).getTransitions().get(j).getEdge().getDirection() == '>') 
                                    moveRight();
                                 else if (estados.get(i).getTransitions().get(j).getEdge().getDirection() == '<') 
                                    moveLeft();
                                

                                break outerloop;
                            }
                        }
                    } else {
                        if (actualState.getName().equals(estados.get(i).getName())) {
                            if (labels[index].getText().charAt(0) == estados.get(i).getTransitions().get(j).getEdge().getR()) {
                                actualState = estados.get(i).getTransitions().get(j).getState();

                                labels[index].setText(estados.get(i).getTransitions().get(j).getEdge().getW().toString());

                                if (estados.get(i).getTransitions().get(j).getEdge().getDirection() == '>') 
                                    moveRight();
                                 else if (estados.get(i).getTransitions().get(j).getEdge().getDirection() == '<') 
                                    moveLeft();
                                

                                break outerloop;
                            }
                        }
                    }
                }
            }
        }

    }

    public void paintResult(boolean accepted) {
        if (accepted) {
            this.jLabelResultado.setText("Aceito");

            jPanelResultado.setBackground(Color.green);
        } else {
            this.jLabelResultado.setText("NÃ£o aceito");

            jPanelResultado.setBackground(Color.red);
        }
    }

    public boolean contem(State state) {
        boolean contains = false;

        for (State estado : this.estados) {
            if (state.getName().equals(estado.getName())) {
                contains = true;
            }
        }

        return contains;
    }

    public void moveRight() throws InterruptedException {
        if (index < panels.length - 1) {
            index++;

            panels[index - 1].setBackground(Color.white);
            panels[index].setBackground(Color.yellow);

            jPanelFita.scrollRectToVisible(panels[index].getBounds());

            try {
                Thread.sleep(jSlider1.getValue() * 10);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public void moveLeft() throws InterruptedException {
        if (index > 0) {
            index--;

            panels[index + 1].setBackground(Color.white);
            panels[index].setBackground(Color.yellow);

            jPanelFita.scrollRectToVisible(panels[index].getBounds());

            try {
                Thread.sleep(jSlider1.getValue() * 10);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane FileNameTextField;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton RunButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelResultado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelFita;
    private javax.swing.JPanel jPanelResultado;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables

    boolean firstClick = true;
    boolean fileloaded = true;
    int QtdCelulas = 0;
    JPanel panels[];
    JLabel labels[];
    int index = 0;
    String fita = "";
    javax.swing.JPanel test = new javax.swing.JPanel();
    ArrayList<State> estados = new ArrayList<State>();
    ArrayList<String[]> parametros = new ArrayList<String[]>();
    ArrayList<String[]> processos = new ArrayList<String[]>();
}
